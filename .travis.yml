language: rust

matrix:
  include:

    ####### linux

    - name: linux|stable|no-default
      os: linux
      rust: stable
      env: FEATURE_FLAGS="--no-default-features"
      cache: cargo
      addons:
        apt:
          packages:
            - libgraphite2-dev

    - name: linux|stable|pkg-config
      os: linux
      rust: stable
      env: FEATURE_FLAGS="--no-default-features --features pkg-config"
      cache: cargo
      addons:
        apt:
          packages:
            - libgraphite2-dev

    - name: linux|stable|static
      os: linux
      rust: stable
      env: FEATURE_FLAGS="--no-default-features --features static"
      cache: cargo

    - name: linux|nightly|default
      os: linux
      rust: nightly
      cache: cargo

    ####### osx

    - name: osx|stable|no-default
      os: osx
      rust: stable
      env: FEATURE_FLAGS="--no-default-features"
      cache: cargo
      addons:
        homebrew:
          packages:
            - graphite2

    - name: osx|stable|pkg-config
      os: osx
      rust: stable
      # Use newest image to get the latest formula.
      osx_image: xcode10.2
      env: FEATURE_FLAGS="--no-default-features --features pkg-config"
      cache: cargo
      addons:
        homebrew:
          packages:
            - graphite2

    - name: osx|stable|static
      os: osx
      rust: stable
      env: FEATURE_FLAGS="--no-default-features --features static"
      cache: cargo

    - name: osx|nightly|default
      os: osx
      rust: nightly
      cache: cargo

script:
  # Package and build the crate with feature flags.
  - cargo package -vv --manifest-path graphite2-sys/Cargo.toml $FEATURE_FLAGS
  # Run the bindgen-generated tests.
  - cargo test -vv --manifest-path graphite2-sys/Cargo.toml $FEATURE_FLAGS
  # Test by compiling with a C compiler.
  - cargo run -vv --manifest-path graphite2-sys-ctest/Cargo.toml
